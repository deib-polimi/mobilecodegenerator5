/************************************************************************************************************************
 * Copyright 2017 Gregorio Perego, Stefania Pezzetti, Aldo Pintus, Alessio Rossotti, Massimo Beccari
 * This file is part of it.polimi.mobilecodegenerator.
 * 
 * it.polimi.mobilecodegenerator is free software: 
 * you can redistribute it and/or modify it under the terms of the 
 * GNU General Public License as published by the Free Software Foundation, 
 * either version 3 of the License, or (at your option) any later version.
 * 
 * it.polimi.mobilecodegenerator is distributed in the hope that it will be useful, 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
 * See the GNU General Public License for more details.You should have received a copy of the GNU General Public License
 * along with it.polimi.mobilecodegenerator. If not, see <http://www.gnu.org/licenses/>
 * ***********************************************************************************************************************/

import metamodel;
extension model_checks::Extensions;

context Application ERROR "Application name '"+ name +"' does not match the regular expression ^[a-zA-Z]+" : isAppNameValid(name) == true;
	
context Application ERROR "Company identifier '"+ companyIdentifier +"' does not match the regular expression ^[a-z]+(\\.[a-z]+)*" : isCompanyIdentifierValid(companyIdentifier) == true;

context Application ERROR "Names of these Scenes do not match the regular expression ^[a-zA-Z][a-zA-Z0-9_]*" : invalidIds(scenes.name).size == 0;

context Application ERROR "Names of these ViewControllers do not match the regular expression ^[a-zA-Z][a-zA-Z0-9_]*" : invalidIds(viewControllers.name).size == 0;

context Application ERROR "Names of these WatchControllers do not match the regular expression ^[a-zA-Z][a-zA-Z0-9_]*" : invalidIds(watchControllers.name).size == 0;

context Application ERROR "Names of these Scenes must be unique" : duplicatedIds(scenes.name).size == 0;

context Application ERROR "Names of these ViewControllers must be unique" : duplicatedIds(viewControllers.name).size == 0;

context Application ERROR "Names of these WatchControllers must be unique" : duplicatedIds(watchControllers.name).size == 0;
	
context Application ERROR "These ids do not match the regular expression ^[a-zA-Z][a-zA-Z0-9_]*" : invalidIds(ids()).size == 0;

context Application ERROR "Ids must be unique" : duplicatedIds(ids()).size == 0;
	
context Application if(scenes.size) > 0 ERROR "There must be one and only one launcher Scene" : scenes.select(s | s.launcher==true).size == 1;

context Application if(watchControllers.size) > 0 ERROR "There must be one and only one launcher WatchController" : watchControllers.select(vc | vc.launcher==true).size == 1;

context Application ERROR "Files in user_files folder must not be directories and must have a name containing only [a-z0-9_] with specified extension: " : invalidFilesNames().size == 0;

context Application if(invalidFilesNames().size == 0) ERROR "Extensions of files in user_files folder must be html, txt, css, png, jpg, gif, mp4, 3gp or mp3: " : invalidFilesExtensions().size == 0;

context Application if(invalidFilesNames().size == 0 && invalidFilesExtensions().size == 0) ERROR "Files in user_files folder must have different names: " : duplicatedFilesNames().size == 0;
	
	
context Navigation if(contextScene == null) ERROR "Navigation of a menu item must have a destination [Navigation: '"+id+"']" : destinationScene != null;


context UiPhoneControl if(dimensionConstraint != null && !dimensionIsUnbinded(true, positionConstraints.layoutEdge)) ERROR "Control with width bindend by Position Constraints can't have a Dimension Constraint with fixedWidth or widthPercent [UiPhoneControl: '"+id+"']" : ((dimensionConstraint.fixedWidth == null) && (dimensionConstraint.widthPercent == null));

context UiPhoneControl if(dimensionConstraint != null && !dimensionIsUnbinded(false, positionConstraints.layoutEdge)) ERROR "Control with height bindend by Position Constraints can't have a Dimension Constraint with fixedHeight or heightPercent [UiPhoneControl: '"+id+"']" : ((dimensionConstraint.fixedHeight == null) && (dimensionConstraint.heightPercent == null));

context UiPhoneControl if(dimensionConstraint != null && dimensionConstraint.fixedRatio != null && !dimensionIsUnbinded(true, positionConstraints.layoutEdge)) ERROR "Control with width bindend by Position Constraints and Ratio fixed can't have a Dimension Constraint with fixedHeight or heightPercent [UiPhoneControl: '"+id+"']" : ((dimensionConstraint.fixedHeight == null) && (dimensionConstraint.heightPercent == null));

context UiPhoneControl if(dimensionConstraint != null && dimensionConstraint.fixedRatio != null && !dimensionIsUnbinded(false, positionConstraints.layoutEdge)) ERROR "Control with height bindend by Position Constraints and Ratio fixed can't have a Dimension Constraint with fixedWidth or widthPercent [UiPhoneControl: '"+id+"']" : ((dimensionConstraint.fixedWidth == null) && (dimensionConstraint.widthPercent == null));


context WatchButton if(watchClickListener!=null && watchClickListener.watchNavigation!=null) ERROR "WatchNavigation must have a destination [WatchButton: '"+id+"']" : !watchClickListener.watchNavigation.destination.matches("");

context WatchButton if(watchClickListener.watchNavigation!=null && watchClickListener.watchNavigation.destination!=null) ERROR "Destination of WatchNavigation must be the name of an existing WatchController [WatchButton: '"+id+"']" : watchController.application.watchControllers.exists(vc| vc.name==watchClickListener.watchNavigation.destination);


context PhotocameraController if(!imageViewId.matches("")) ERROR "ImageViewId of PhotocameraController must be the id of an existing ImageView with sourceType = 'hardwareFile' in the same ViewController" : viewController.imageViews.exists(iv| iv.id.matches(imageViewId) && iv.sourceType.toString().matches("hardwareFile"));		

context VideocameraController if(!videoViewId.matches("")) ERROR "VideoViewId of VideocameraController must be the id of an existing VideoView with sourceType = 'hardwareFile' in the same ViewController" : viewController.videoViews.exists(vv| vv.id.matches(videoViewId) && vv.sourceType.toString().matches("hardwareFile"));	

context AudioRecorder if(!audioPlayerId.matches("")) ERROR "AudioPlayerId of AudioRecorder must be the id of an existing AudioPlayer with sourceType = 'hardwareFile' in the same ViewController" : viewController.audioPlayers.exists(ap| ap.id.matches(audioPlayerId) && ap.sourceType.toString().matches("hardwareFile"));


context ImageView if(sourceType.toString().matches("hardwareFile")) ERROR "FileUri of ImageView must be left empty if the sourceType='hardwareFile'" : fileUri.matches("");

context VideoView if(sourceType.toString().matches("hardwareFile")) ERROR "FileUri of VideoView must be left empty if the sourceType='hardwareFile'" : fileUri.matches("");

context AudioPlayer if(sourceType.toString().matches("hardwareFile")) ERROR "FileUri of AudioPlayer must be left empty if the sourceType='hardwareFile'" : fileUri.matches("");

	
context ImageView if(sourceType.toString().matches("localFile") && !fileUri.matches("")) ERROR "FileUri of ImageView must end with png, jpg or gif extensions" : fileUri.contains(".") && (fileUri.split("\\.").get(1).matches("png") || fileUri.split("\\.").get(1).matches("jpg") || fileUri.split("\\.").get(1).matches("gif"));

context VideoView if(sourceType.toString().matches("localFile") && !fileUri.matches("")) ERROR "FileUri of VideoView must end with mp4 or 3gp extensions" : fileUri.contains(".") && (fileUri.split("\\.").get(1).matches("mp4") || fileUri.split("\\.").get(1).matches("3gp"));

context AudioPlayer if(sourceType.toString().matches("localFile") && !fileUri.matches("")) ERROR "FileUri of AudioPlayer must end with mp3 extension" : fileUri.contains(".") && (fileUri.split("\\.").get(1).matches("mp3"));

context WebView if(!HTMLFileName.matches("")) ERROR "HTMLFileName of WebView must end with html extension" : HTMLFileName.contains(".") && (HTMLFileName.split(".").last().matches("html"));


context Scene ERROR "Number of ViewControllers in scene must be at least 1 [Scene: '"+id+"']" : childViewControllers.size >= 1;

context Scene ERROR "Number of parent ViewControllers in scene must be at most 2 [Scene: '"+id+"']" : parentViewControllers.size <= 2;

context Scene if(childViewControllers.size == 1) ERROR "Scenes with one ViewController must have type = 'singleVC' [Scene: '"+id+"']" : typeSmartphone.toString().matches("singleVC") && typeTablet.toString().matches("singleVC");


context ViewController ERROR "Names of AsyncTasks must be of minimum one character long" : asyncTasks.forAll(at| at.name.length>0);

context ViewController ERROR "Names of AsyncTasks must be unique in the same ViewController" : asyncTasks.forAll(at1 | asyncTasks.select(at2 | at1.name.matches(at2.name)).size == 1);

context ViewController if(scene != null) ERROR "Parent ViewControllers can contain only containers (no other UI controls and no tasks and dialogs)" : ((controlChains.size == 0) && (buttons.size == 0) && (cards.size == 0) && (switches.size == 0) && (datepickers.size == 0) && (timepickers.size == 0) && (sliders.size == 0) && (spinners.size == 0) && (textViews.size == 0) && (webViews.size == 0) && (imageViews.size == 0) && (videoViews.size == 0) && (audioPlayers.size == 0) && (listViews.size == 0) && (gridViews.size == 0) && (editTexts.size == 0) && (asyncTasks.size == 0) && (progressDialogs.size == 0) && (alertDialogs.size == 0) && (map == null) && (photocameraController == null) && (videocameraController == null) && (audioRecorder == null));

context ViewController if(scene == null) ERROR "Non-parent ViewControllers can't contain containers" : containers.size == 0;


context Menu if (this != null && menuItems.size > 0) ERROR "Menu items must be all different ": duplicatedIds(menuItems.navigation.destinationScene.id).size == 0;

context MenuItem ERROR "There must be a Navigation for every MenuItem [MenuItem: '"+id+"']" : navigation!=null;


context ControlChain ERROR "Number of controls in control chain must be at least 2 [ControlChain: '"+id+"']" : nControls >= 2;

context ControlChain if(type.toString().matches("packed")) ERROR "ControlChains of type 'packed' must have bias attribute [ControlChain: '"+id+"']" : bias != null;

context ControlChain if(type.toString().matches("packed") || type.toString().matches("weighted")) ERROR "ControlChains of type 'weighted' or 'packed' must have spacing attribute [ControlChain: '"+id+"']" : spacing != null;

context UiPhoneControl if(controlChain != null && indexInChain != 0 && indexInChain != (controlChain.nControls - 1)) ERROR "Non-first and non-last UiPhoneControls inside ControlChains must have zero margins on the chain's axis [UiPhoneControl: '"+id+"']" : ((controlChain.axis.toString().matches("horizontal") && marginStart == 0 && marginEnd == 0) || (controlChain.axis.toString().matches("vertical") && marginTop == 0 && marginBottom == 0));

context UiPhoneControl if(controlChain != null && indexInChain == 0 && !(controlChain.type.toString().matches("spread_inside") || controlChain.type.toString().matches("weighted"))) ERROR "First UiPhoneControl inside a ControlChain can have marginStart/marginTop in horizontal/vertical chain only if chain's type is 'spread_inside' or 'weighted' [UiPhoneControl: '"+id+"']" : ((controlChain.axis.toString().matches("horizontal") && marginEnd == 0) || (controlChain.axis.toString().matches("vertical") && marginBottom == 0));

context UiPhoneControl if(controlChain != null && indexInChain == 0 && !(controlChain.type.toString().matches("spread_inside") || controlChain.type.toString().matches("weighted"))) ERROR "First UiPhoneControl inside a ControlChain can have marginStart/marginTop in horizontal/vertical chain only if chain's type is 'spread_inside' or 'weighted' [UiPhoneControl: '"+id+"']" : ((controlChain.axis.toString().matches("horizontal") && marginStart == 0 && marginEnd == 0) || (controlChain.axis.toString().matches("vertical") && marginTop == 0 && marginBottom == 0));

context UiPhoneControl if(controlChain != null && indexInChain == (controlChain.nControls - 1) && (controlChain.type.toString().matches("spread_inside") || controlChain.type.toString().matches("weighted"))) ERROR "Last UiPhoneControl inside a ControlChain can have marginEnd/marginBottom in horizontal/vertical chain only if chain's type is 'spread_inside' or 'weighted' [UiPhoneControl: '"+id+"']" : ((controlChain.axis.toString().matches("horizontal") && marginStart == 0) || (controlChain.axis.toString().matches("vertical") && marginTop == 0));

context UiPhoneControl if(controlChain != null && indexInChain == (controlChain.nControls - 1) && !(controlChain.type.toString().matches("spread_inside") || controlChain.type.toString().matches("weighted"))) ERROR "Last UiPhoneControl inside a ControlChain can have marginEnd/marginBottom in horizontal/vertical chain only if chain's type is 'spread_inside' or 'weighted' [UiPhoneControl: '"+id+"']" : ((controlChain.axis.toString().matches("horizontal") && marginStart == 0 && marginEnd == 0) || (controlChain.axis.toString().matches("vertical") && marginTop == 0 && marginBottom == 0));


context PositionConstraint if(layoutEdge.toString().matches("start") || layoutEdge.toString().matches("end")) ERROR "Position constraints with layoutEdge = start|end must have referenceLayoutEdge = start|end [PositionConstraint: '"+id+"']" : (referenceLayoutEdge.toString().matches("start") || referenceLayoutEdge.toString().matches("end"));

context PositionConstraint if(layoutEdge.toString().matches("top") || layoutEdge.toString().matches("bottom")) ERROR "Position cvonstraints with layoutEdge = top|bottom must have referenceLayoutEdge = top|bottom [PositionConstraint: '"+id+"']" : (referenceLayoutEdge.toString().matches("top") || referenceLayoutEdge.toString().matches("bottom"));

context PositionConstraint if(layoutEdge.toString().matches("centerX")) ERROR "Position constraints with layoutEdge = centerX must have referenceLayoutEdge = centerX [PositionConstraint: '"+id+"']" : referenceLayoutEdge.toString().matches("centerX");

context PositionConstraint if(layoutEdge.toString().matches("centerY")) ERROR "Position constraints with layoutEdge = centerY must have referenceLayoutEdge = centerY [PositionConstraint: '"+id+"']" : referenceLayoutEdge.toString().matches("centerY");

context PositionConstraint if(withParent) ERROR "Position constraints with parent must have layoutEdge = referenceLayoutEdge [PositionConstraint: '"+id+"']" : layoutEdge.toString().matches(referenceLayoutEdge.toString());

context PositionConstraint if(!withParent) ERROR "Position constraints with other controls must have a referenceElement [PositionConstraint: '"+id+"']" : referenceElement != null;


context DimensionConstraint ERROR "Dimension constraints can't have both fixed and percent width [DimensionConstraint of control: '"+uiPhoneControl.id+"']" : !((fixedWidth != null) && (widthPercent != null));

context DimensionConstraint ERROR "Dimension constraints can't have both fixed and percent height [DimensionConstraint of control: '"+uiPhoneControl.id+"']" : !((fixedHeight != null) && (heightPercent != null));

context DimensionConstraint if(fixedRatio != null && (fixedWidth != null || widthPercent != null)) ERROR "Dimension constraints with fixedRatio and fixed or percent width can't have fixed or percent height [DimensionConstraint of control: '"+uiPhoneControl.id+"']" : ((fixedHeight == null) && (heightPercent == null));

context DimensionConstraint if(fixedRatio != null && (fixedHeight != null || heightPercent != null)) ERROR "Dimension constraints with fixedRatio and fixed or percent height can't have fixed or percent width [DimensionConstraint of control: '"+uiPhoneControl.id+"']" : ((fixedWidth == null) && (widthPercent == null));